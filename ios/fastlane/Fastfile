default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    increment_build_number(xcodeproj: "Runner.xcodeproj")
    build_app(workspace: "Runner.xcworkspace", scheme: "Runner")
    upload_to_testflight
  end

  desc "Create new certificates and provisioning profiles"
  lane :create_certificates_and_profiles do
    # Create for appstore
    match(
      type: "appstore",
      force: true,
      readonly: false,
    )

    # Create for development
    match(
      type: "development",
      force: true,
      readonly: false,
      )

    # Create for adhoc
    match(
      type: "adhoc",
      force: true,
      readonly: false,
    )
  end


  desc "Build and upload to TestFlight"
  lane :upload_to_testflight_function do
    setup_ci
    
    # Get app identifier and team ID from Appfile
    app_id = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)

    match_profile = "match AppStore #{app_id}"
    
    # Configure App Store Connect API
    app_store_connect_api_key(
      key_id: ENV["ASC_KEY_ID"],
      issuer_id: ENV["ASC_ISSUER_ID"],
      key_filepath: ENV["ASC_KEY_PATH"],
    )
    
    # Fetch certificates and profiles
    sync_code_signing(
      type: "appstore",
      readonly: true,
      app_identifier: app_id
    )
    
    # Update project settings to use match provisioning profile
    update_code_signing_settings(
      use_automatic_signing: false,
      path: "Runner.xcodeproj",
      team_id: team_id,
      profile_name: match_profile,
      code_sign_identity: "iPhone Distribution"
    )
    
    # Increment build number
    increment_build_number(
      build_number: latest_testflight_build_number + 1
    )
    
    # Build the app
    build_app(
      scheme: "development",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          app_id => match_profile
        }
      }
    )
    
    # Upload to TestFlight
    upload_to_testflight(skip_waiting_for_build_processing: true)
  end
  
  
end